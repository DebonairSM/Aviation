name: Deploy to Azure Dev

on:
  push:
    branches:
      - main
      - master

env:
  DOTNET_VERSION: '8.0.x'
  SOLUTION_FILE: 'EnterpriseApiIntegration.sln'
  REGISTRY_NAME: 'aviationqa2024'
  RESOURCE_GROUP: 'rg-aviation-dev'

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
    
    - name: Azure Login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Log in to Azure Container Registry
      uses: azure/docker-login@v1
      with:
        login-server: ${{ env.REGISTRY_NAME }}.azurecr.io
        username: ${{ secrets.ACR_USERNAME }}
        password: ${{ secrets.ACR_PASSWORD }}
    
    - name: Restore dependencies
      run: dotnet restore ${{ env.SOLUTION_FILE }}
    
    - name: Build solution
      run: dotnet build ${{ env.SOLUTION_FILE }} --configuration Release --no-restore
    
    - name: Run tests
      run: |
        dotnet test ${{ env.SOLUTION_FILE }} \
          --configuration Release \
          --no-build \
          --verbosity normal \
          --logger "console;verbosity=detailed"

    # Build and push Docker images
    - name: Build and push Identity Service
      run: |
        docker build -f AzureMicroservicesPlatform.Identity/Dockerfile -t ${{ env.REGISTRY_NAME }}.azurecr.io/identity:${{ github.sha }} .
        docker push ${{ env.REGISTRY_NAME }}.azurecr.io/identity:${{ github.sha }}

    - name: Build and push Aircraft Service
      run: |
        docker build -f AzureMicroservicesPlatform.Services.Aircraft/Dockerfile -t ${{ env.REGISTRY_NAME }}.azurecr.io/aircraft:${{ github.sha }} .
        docker push ${{ env.REGISTRY_NAME }}.azurecr.io/aircraft:${{ github.sha }}

    - name: Build and push Customers Service
      run: |
        docker build -f AzureMicroservicesPlatform.Services.Customers/Dockerfile -t ${{ env.REGISTRY_NAME }}.azurecr.io/customers:${{ github.sha }} .
        docker push ${{ env.REGISTRY_NAME }}.azurecr.io/customers:${{ github.sha }}

    - name: Build and push Subscriptions Service
      run: |
        docker build -f AzureMicroservicesPlatform.Services.Subscriptions/Dockerfile -t ${{ env.REGISTRY_NAME }}.azurecr.io/subscriptions:${{ github.sha }} .
        docker push ${{ env.REGISTRY_NAME }}.azurecr.io/subscriptions:${{ github.sha }}

    # Deploy to Azure Web Apps
    - name: Deploy Identity Service
      uses: azure/webapps-deploy@v2
      with:
        app-name: 'aviation-identity-dev'
        images: '${{ env.REGISTRY_NAME }}.azurecr.io/identity:${{ github.sha }}'

    - name: Deploy Aircraft Service
      uses: azure/webapps-deploy@v2
      with:
        app-name: 'aviation-aircraft-dev'
        images: '${{ env.REGISTRY_NAME }}.azurecr.io/aircraft:${{ github.sha }}'

    - name: Deploy Customers Service
      uses: azure/webapps-deploy@v2
      with:
        app-name: 'aviation-customers-dev'
        images: '${{ env.REGISTRY_NAME }}.azurecr.io/customers:${{ github.sha }}'

    - name: Deploy Subscriptions Service
      uses: azure/webapps-deploy@v2
      with:
        app-name: 'aviation-subscriptions-dev'
        images: '${{ env.REGISTRY_NAME }}.azurecr.io/subscriptions:${{ github.sha }}'

    - name: Azure Logout
      run: az logout
      if: always() 