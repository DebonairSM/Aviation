name: Deploy Bicep Templates to Azure Dev

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
  AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
  AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
  AZURE_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
  AZURE_AD_AUDIENCE: ${{ secrets.AZURE_AD_AUDIENCE }}
  BICEP_MAIN_FILE: bicep/main.bicep
  ENVIRONMENT: dev

jobs:
  deploy-infrastructure:
    name: Deploy Infrastructure
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: '{"clientId":"${{ env.AZURE_CLIENT_ID }}","clientSecret":"${{ env.AZURE_CLIENT_SECRET }}","subscriptionId":"${{ env.AZURE_SUBSCRIPTION_ID }}","tenantId":"${{ env.AZURE_TENANT_ID }}"}'

      - name: Deploy Bicep Template
        uses: azure/arm-deploy@v1
        with:
          scope: subscription
          subscriptionId: ${{ env.AZURE_SUBSCRIPTION_ID }}
          region: 'eastus'
          template: ${{ env.BICEP_MAIN_FILE }}
          parameters: >
            environmentName=${{ env.ENVIRONMENT }}
            tenantId=${{ env.AZURE_TENANT_ID }}
            audience=${{ env.AZURE_AD_AUDIENCE }}
          deploymentName: 'aviation-bicep-${{ env.ENVIRONMENT }}-${{ github.run_number }}'
          failOnStdErr: false

      - name: Output Deployment Results
        run: |
          echo "Deployment completed successfully"
          echo "Resource Group: ${{ steps.deploy-bicep.outputs.resourceGroupName }}"
          echo "Gateway URL: ${{ steps.deploy-bicep.outputs.gatewayUrl }}"
          echo "Aircraft Service URL: ${{ steps.deploy-bicep.outputs.aircraftServiceUrl }}"

  deploy-services:
    name: Deploy Services
    needs: deploy-infrastructure
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Setup .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '8.0.x'

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: '{"clientId":"${{ env.AZURE_CLIENT_ID }}","clientSecret":"${{ env.AZURE_CLIENT_SECRET }}","subscriptionId":"${{ env.AZURE_SUBSCRIPTION_ID }}","tenantId":"${{ env.AZURE_TENANT_ID }}"}'

      - name: Dotnet Publish API Gateway
        run: |
          dotnet publish API.Gateway/API.Gateway.csproj -c Release -o ./publish/gateway

      - name: Dotnet Publish Aircraft Service
        run: |
          dotnet publish API.Services/API.Services.csproj -c Release -o ./publish/aircraft

      - name: Deploy API Gateway
        uses: azure/webapps-deploy@v2
        with:
          app-name: 'api-gateway-aviation-${{ env.ENVIRONMENT }}'
          package: './publish/gateway'

      - name: Deploy Aircraft Service
        uses: azure/webapps-deploy@v2
        with:
          app-name: 'api-aircraft-aviation-${{ env.ENVIRONMENT }}'
          package: './publish/aircraft' 